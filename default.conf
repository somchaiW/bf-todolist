upstream fastcgi_backend {
	server 127.0.0.1:9000;
}

server {
    listen 80; ## listen for ipv4; this line is default and implied
    listen [::]:80 default ipv6only=on; ## listen for ipv6


    # Make site accessible from any url
    server_name _;

    root /var/www/html/bf-todolist/public;
    index index.php index.html;

    # HTTP to HTTPS behind load balancer
    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }

    set $my_http "http";
    set $my_ssl "off";
    set $my_port "80";

    if ($http_x_forwarded_proto = "https") {
        set $my_http "https";
        set $my_ssl "on";
        set $my_port "443";
    }

    location /logz {
        alias /var/log/supervisor;
        autoindex on;
        types {
                text/plain log;
                text/plain err;
        }
        try_files $uri $uri/ =404;
        allow 78.29.232.234/32; # A&C Telenet Fiber Hoegaarden
        allow 213.224.1.238/32; # A&C Telenet Hoegaarden
        allow 144.178.225.245/32; # A&C Eurofiber Tienen
        allow 188.204.252.2/32; # A&C Fiber Zaltbommel
        allow 34.241.159.166/32; # AWS gateway
        allow 10.0.0.0/8; # Internal network range
        allow 172.16.0.0/12; # Internal network range
        allow 192.168.0.0/16; # Internal network range
        deny all;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Simple health check
    location /health-check {
        access_log off;
        return 200 'A-OK!';
        # because default content-type is application/octet-stream,
        # browser will offer to "save the file"...
        # the next line allows you to see it in the browser so you can test
        add_header Content-Type text/plain;
    }

    # Block access to certain . files
    location ~ /\.(svn|git|hg|htpasswd|bash|ssh|htaccess) { return 404; }

    # Block access to the /scripts/ follder which is used in this image
    location ~ /scripts/ { return 404; }

    # Block access to composer files
    location ~ /(composer\.lock|composer\.json) { return 404; }

    # Block access to the vendor folder
    location ~ ^/vendor/ { return 404; }

    location / {
        try_files $uri $uri/ @rewrite;
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }

    # Add the ability to inject application specific configuration
    include conf.d/application.conf;

    location @rewrite {
        rewrite / /index.php?$args;
    }

    location ~ \.php$ {
        include conf.d/iprestrictions.conf;
        try_files $uri =404;

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;

        fastcgi_param PHP_FLAG "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_read_timeout 600s;
        fastcgi_send_timeout 600s;
        fastcgi_connect_timeout 600s;
        fastcgi_pass fastcgi_backend;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param  HTTPS $my_ssl;
        include fastcgi_params;
    }

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (\.php$|\.htaccess$|\.git) {
        deny all;
    }
}
